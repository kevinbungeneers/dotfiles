if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# For my own sanity:
# $'\e]0;%~\a'                                           => sets both the tab and window title at the same time
# $'\e]1;%~\a'                                           => sets the tab title to the current working dir
# $'\e]2;%n@%m\a'                                        => sets the window title to user@hostname
# $'\e]7;file://Kevins-MacBook-Pro.local/Users/kevin\a'  => sets the proxy icon + window and tab title. Only supported by a few terminal emulators.

# Emacs terminal does not support setting the title.
if [ -z "$INSIDE_EMACS" ]; then
    update_terminal_cwd() {
        # Use ESC]7; to set the proxy icon + tab and window title if we're inside an Apple Terminal.
        if [[ $TERM_PROGRAM == "Apple_Terminal" ]]; then
            # Identify the directory using a "file:" scheme URL, including
            # the host name to disambiguate local vs. remote paths.

            # Percent-encode the pathname.
            local url_path=''
            {
                # Use LC_CTYPE=C to process text byte-by-byte and
                # LC_COLLATE=C to compare byte-for-byte. Ensure that
                # LC_ALL and LANG are not set so they don't interfere.
                local i ch hexch LC_CTYPE=C LC_COLLATE=C LC_ALL= LANG=
                for ((i = 1; i <= ${#PWD}; ++i)); do
                    ch="$PWD[i]"
                    if [[ "$ch" =~ [/._~A-Za-z0-9-] ]]; then
                        url_path+="$ch"
                    else
                        printf -v hexch "%02X" "'$ch"
                        url_path+="%$hexch"
                    fi
                done
            }

            # Set the window title + proxy icon.
            print -n $'\e]7;file://'${HOST}${url_path}$'/\a'

            # Clear the window title (ESC]2;) and tab title (ESC]3;) as ESC]7; already sets the folder name + proxy icon).
            print -n $'\e]2;\a'$'\e]1;\a'

        else
            # We're in a terminal emulator that probably doesn't support ESC]7;
            # Mimic Apple's Terminal behaviour: current dir name as window title
            # and full path as tab title.
            print -n -P $'\e]1;%~\a'
            print -n $'\e]2;'${PWD##*/}$'\a'

            # Sets a general title.
            # print -n -P $'\e]0;%~\a'
        fi
    }

  # Register the function so it is called at each prompt.
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd update_terminal_cwd
fi

if command -v $HOME/.local/bin/mise &> /dev/null; then
    eval "$($HOME/.local/bin/mise activate zsh)"
fi